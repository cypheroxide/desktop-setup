# ~/.zshrc - ZSH Configuration
# This is the ZSH configuration for the desktop setup project

# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

# Path configuration
export PATH=$HOME/bin:$HOME/.local/bin:/usr/local/bin:$PATH

# Path to your Oh My Zsh installation
export ZSH="$HOME/.oh-my-zsh"

# Set ZSH theme
ZSH_THEME="powerlevel10k/powerlevel10k"

# ZSH configuration
CASE_SENSITIVE="false"
HYPHEN_INSENSITIVE="true"
DISABLE_AUTO_UPDATE="false"
DISABLE_UPDATE_PROMPT="false"
export UPDATE_ZSH_DAYS=13
DISABLE_MAGIC_FUNCTIONS="false"
DISABLE_LS_COLORS="false"
DISABLE_AUTO_TITLE="false"
ENABLE_CORRECTION="true"
COMPLETION_WAITING_DOTS="true"
DISABLE_UNTRACKED_FILES_DIRTY="false"
HIST_STAMPS="yyyy-mm-dd"

# ZSH plugins
plugins=(
    git
    docker
    docker-compose
    kubectl
    npm
    yarn
    python
    pip
    virtualenv
    archlinux
    systemd
    ssh-agent
    gpg-agent
    colored-man-pages
    command-not-found
    history-substring-search
    zsh-autosuggestions
    zsh-syntax-highlighting
    tailscale
)

source $ZSH/oh-my-zsh.sh

# User configuration

# Preferred editor for local and remote sessions
if [[ -n $SSH_CONNECTION ]]; then
  export EDITOR='nano'
else
  export EDITOR='code'
fi

# Compilation flags
export ARCHFLAGS="-arch x86_64"

# Environment variables
export BROWSER="firefox"
export TERMINAL="konsole"
export PAGER="less"

# Docker configuration (use sudo)
export DOCKER_BUILDKIT=1
export COMPOSE_DOCKER_CLI_BUILD=1

# Development environment
export NODE_ENV="development"
export PYTHONPATH="$HOME/.local/lib/python3.11/site-packages:$PYTHONPATH"

# GPG TTY
export GPG_TTY=$(tty)

# Tailscale environment
export TAILSCALE_HOSTNAME=$(hostname)

# Custom aliases
alias ll='ls -alF'
alias la='ls -A'
alias l='ls -CF'
alias ..='cd ..'
alias ...='cd ../..'
alias ....='cd ../../..'
alias grep='grep --color=auto'
alias fgrep='fgrep --color=auto'
alias egrep='egrep --color=auto'
alias mkdir='mkdir -pv'
alias rm='rm -i'
alias cp='cp -i'
alias mv='mv -i'
alias df='df -h'
alias du='du -h'
alias free='free -m'
alias ps='ps auxf'
alias psgrep='ps aux | grep -v grep | grep -i -e VSZ -e'
alias ping='ping -c 5'
alias fastping='ping -c 100 -s.2'
alias ports='netstat -tulanp'
alias wget='wget -c'
alias histg='history | grep'
alias myip='curl -s https://ifconfig.me'

# Docker aliases (with sudo)
alias docker='sudo docker'
alias docker-compose='sudo docker-compose'
alias dps='sudo docker ps'
alias dpa='sudo docker ps -a'
alias di='sudo docker images'
alias dip='sudo docker image prune'
alias dvp='sudo docker volume prune'
alias dsp='sudo docker system prune'
alias dlog='sudo docker logs'
alias dexec='sudo docker exec -it'

# Tailscale aliases
alias tailscale-status='tailscale status'
alias tailscale-ip='tailscale ip'
alias tailscale-up='sudo tailscale up'
alias tailscale-down='sudo tailscale down'
alias tsup='sudo tailscale up'
alias tsdown='sudo tailscale down'
alias tsstatus='tailscale status'

# System aliases
alias pacman='sudo pacman'
alias systemctl='sudo systemctl'
alias journalctl='sudo journalctl'
alias update='sudo pacman -Syu'
alias install='sudo pacman -S'
alias search='pacman -Ss'
alias info='pacman -Si'
alias remove='sudo pacman -R'
alias autoremove='sudo pacman -Rns $(pacman -Qtdq)'

# YAY aliases
alias yayi='yay -S'
alias yays='yay -Ss'
alias yayu='yay -Syu'
alias yayr='yay -R'

# Git aliases
alias gs='git status'
alias ga='git add'
alias gaa='git add --all'
alias gc='git commit -m'
alias gca='git commit --amend'
alias gp='git push'
alias gl='git log --oneline --graph --decorate'
alias gd='git diff'
alias gco='git checkout'
alias gb='git branch'
alias gm='git merge'
alias gf='git fetch'
alias gr='git reset'
alias gst='git stash'
alias gstp='git stash pop'

# Development aliases
alias py='python3'
alias pip='pip3'
alias venv='python3 -m venv'
alias activate='source venv/bin/activate'
alias serve='python3 -m http.server'
alias json='python3 -m json.tool'

# Custom functions
extract() {
    if [ -f $1 ] ; then
        case $1 in
            *.tar.bz2)   tar xjf $1     ;;
            *.tar.gz)    tar xzf $1     ;;
            *.bz2)       bunzip2 $1     ;;
            *.rar)       unrar e $1     ;;
            *.gz)        gunzip $1      ;;
            *.tar)       tar xf $1      ;;
            *.tbz2)      tar xjf $1     ;;
            *.tgz)       tar xzf $1     ;;
            *.zip)       unzip $1       ;;
            *.Z)         uncompress $1  ;;
            *.7z)        7z x $1        ;;
            *)     echo "'$1' cannot be extracted via extract()" ;;
        esac
    else
        echo "'$1' is not a valid file"
    fi
}

# Create directory and cd into it
mkcd() {
    mkdir -p "$1" && cd "$1"
}

# Find files by name
findname() {
    find . -type f -name "*$1*" 2>/dev/null
}

# Find files by content
findcontent() {
    grep -r "$1" . 2>/dev/null
}

# Quick backup
backup() {
    cp "$1" "$1.backup-$(date +%Y%m%d_%H%M%S)"
}

# Network connectivity test
nettest() {
    echo "Testing network connectivity..."
    ping -c 3 8.8.8.8 && echo "✓ Internet connectivity OK" || echo "✗ Internet connectivity failed"
    if command -v tailscale &> /dev/null; then
        tailscale status | head -1
    fi
}

# SSH to Tailscale hosts
ssh-aurumos() { ssh cypheroxide@aurumos "$@"; }
ssh-eresos() { ssh cypheroxide@eresos "$@"; }
ssh-saeulfr() { ssh cypheroxide@saeulfr "$@"; }
ssh-pi4() { ssh pi@pi4-router "$@"; }
ssh-brokkr() { ssh cypheroxide@brokkr "$@"; }

# Custom PATH additions
export PATH="$HOME/.local/share/omarchy/bin:$PATH"
export PATH="/run/media/$USER/Data/project-heimdal/bin:$PATH"
export PATH="/run/media/$USER/Data/desktop-setup/bin:$PATH"

# Load custom local configuration if it exists
[[ -f ~/.zshrc.local ]] && source ~/.zshrc.local

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh
