[user]
    name = Your Name
    email = your.email@example.com
    # Uncomment and set if using GPG signing
    # signingkey = YOUR_GPG_KEY_ID

[init]
    defaultBranch = main

[core]
    editor = nano
    autocrlf = input
    # Set to true on Windows
    # autocrlf = true
    excludesfile = ~/.gitignore_global
    pager = less -R

[color]
    ui = auto
    branch = auto
    diff = auto
    interactive = auto
    status = auto

[color "branch"]
    current = yellow reverse
    local = yellow
    remote = green

[color "diff"]
    meta = yellow bold
    frag = magenta bold
    old = red bold
    new = green bold

[color "status"]
    added = yellow
    changed = green
    untracked = cyan

[push]
    default = simple
    autoSetupRemote = true

[pull]
    rebase = false

[fetch]
    prune = true

[merge]
    tool = vimdiff
    # For KDE users
    # tool = kdiff3

[diff]
    tool = vimdiff
    # For KDE users
    # tool = kdiff3

[alias]
    # Basic shortcuts
    st = status
    co = checkout
    br = branch
    ci = commit
    cm = commit -m
    ca = commit --amend
    
    # Logging
    lg = log --oneline --graph --decorate
    ll = log --pretty=format:'%C(yellow)%h%Creset -%C(red)%d%Creset %s %C(green)(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit
    ls = log --pretty=format:'%C(yellow)%h %C(blue)%ad%C(red)%d %C(reset)%s%C(green) [%cn]' --decorate --date=short
    
    # Diff
    d = diff
    dc = diff --cached
    
    # Add
    a = add
    aa = add --all
    
    # Reset
    unstage = reset HEAD --
    last = log -1 HEAD
    
    # Stash
    sl = stash list
    sa = stash apply
    ss = stash save
    sp = stash pop
    
    # Remote
    rv = remote -v
    
    # Branch management
    cleanup = "!git branch --merged | grep -v '\\*\\|main\\|develop' | xargs -n 1 git branch -d"
    
    # Show files changed in last commit
    dl = "!git ll -1"
    
    # Show a short summary of changes
    sm = submodule
    
    # Quick commit and push
    acp = "!f() { git add -A && git commit -m \"$1\" && git push; }; f"
    
    # Undo last commit (keep changes)
    undo = reset --soft HEAD~1
    
    # Hard reset to remote
    nuke = "!f() { git reset --hard origin/$(git branch --show-current); }; f"

[credential]
    helper = store
    # For better security, consider using:
    # helper = cache --timeout=3600

[help]
    autocorrect = 1

[tag]
    sort = version:refname

[versionsort]
    suffix = -pre
    suffix = .pre
    suffix = -beta
    suffix = .beta
    suffix = -rc
    suffix = .rc

# Include local config if it exists
[include]
    path = ~/.gitconfig.local

# Tailscale-specific settings for accessing remote repositories
[url "git@github.com:"]
    insteadOf = https://github.com/

# GPG signing (uncomment if using)
# [commit]
#     gpgsign = true
# [tag]
#     gpgsign = true
