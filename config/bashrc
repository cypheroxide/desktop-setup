# ~/.bashrc

# If not running interactively, don't do anything
[[ $- != *i* ]] && return

# History settings
HISTCONTROL=ignoreboth
HISTSIZE=1000
HISTFILESIZE=2000
shopt -s histappend
shopt -s checkwinsize

# Enable color support
if [ -x /usr/bin/dircolors ]; then
    test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
    alias ls='ls --color=auto'
    alias grep='grep --color=auto'
    alias fgrep='fgrep --color=auto'
    alias egrep='egrep --color=auto'
fi

# Colored GCC warnings and errors
export GCC_COLORS='error=01;31:warning=01;35:note=01;36:caret=01;32:locus=01:quote=01'

# Prompt colors
RED='\[\033[0;31m\]'
GREEN='\[\033[0;32m\]'
YELLOW='\[\033[1;33m\]'
BLUE='\[\033[0;34m\]'
PURPLE='\[\033[0;35m\]'
CYAN='\[\033[0;36m\]'
WHITE='\[\033[1;37m\]'
NC='\[\033[0m\]' # No Color

# Custom prompt with git branch
parse_git_branch() {
    git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/ (\1)/'
}

# Set prompt
PS1="${GREEN}\u@\h${NC}:${BLUE}\w${YELLOW}\$(parse_git_branch)${NC}\$ "

# Aliases
alias ll='ls -alF'
alias la='ls -A'
alias l='ls -CF'
alias ..='cd ..'
alias ...='cd ../..'
alias ....='cd ../../..'
alias grep='grep --color=auto'
alias fgrep='fgrep --color=auto'
alias egrep='egrep --color=auto'
alias mkdir='mkdir -pv'
alias rm='rm -i'
alias cp='cp -i'
alias mv='mv -i'
alias df='df -h'
alias du='du -h'
alias free='free -m'
alias ps='ps auxf'
alias psgrep='ps aux | grep -v grep | grep -i -e VSZ -e'
alias ping='ping -c 5'
alias fastping='ping -c 100 -s.2'
alias ports='netstat -tulanp'
alias wget='wget -c'
alias histg='history | grep'
alias myip='curl -s https://ifconfig.me'
alias speedtest='curl -s https://raw.githubusercontent.com/sivel/speedtest-cli/master/speedtest.py | python -'

# Docker aliases (with sudo)
alias docker='sudo docker'
alias docker-compose='sudo docker-compose'
alias dps='sudo docker ps'
alias dpa='sudo docker ps -a'
alias di='sudo docker images'
alias dip='sudo docker image prune'
alias dvp='sudo docker volume prune'
alias dsp='sudo docker system prune'
alias dlog='sudo docker logs'
alias dexec='sudo docker exec -it'

# Tailscale aliases
alias tailscale-status='tailscale status'
alias tailscale-ip='tailscale ip'
alias tailscale-up='sudo tailscale up'
alias tailscale-down='sudo tailscale down'

# System aliases
alias pacman='sudo pacman'
alias systemctl='sudo systemctl'
alias journalctl='sudo journalctl'
alias update='sudo pacman -Syu'
alias install='sudo pacman -S'
alias search='pacman -Ss'
alias info='pacman -Si'
alias remove='sudo pacman -R'
alias autoremove='sudo pacman -Rns $(pacman -Qtdq)'

# Git aliases
alias gs='git status'
alias ga='git add'
alias gaa='git add --all'
alias gc='git commit -m'
alias gca='git commit --amend'
alias gp='git push'
alias gl='git log --oneline --graph --decorate'
alias gd='git diff'
alias gco='git checkout'
alias gb='git branch'
alias gm='git merge'
alias gf='git fetch'
alias gr='git reset'
alias gst='git stash'
alias gstp='git stash pop'

# Functions
extract() {
    if [ -f $1 ] ; then
        case $1 in
            *.tar.bz2)   tar xjf $1     ;;
            *.tar.gz)    tar xzf $1     ;;
            *.bz2)       bunzip2 $1     ;;
            *.rar)       unrar e $1     ;;
            *.gz)        gunzip $1      ;;
            *.tar)       tar xf $1      ;;
            *.tbz2)      tar xjf $1     ;;
            *.tgz)       tar xzf $1     ;;
            *.zip)       unzip $1       ;;
            *.Z)         uncompress $1  ;;
            *.7z)        7z x $1        ;;
            *)     echo "'$1' cannot be extracted via extract()" ;;
        esac
    else
        echo "'$1' is not a valid file"
    fi
}

# Create directory and cd into it
mkcd() {
    mkdir -p "$1" && cd "$1"
}

# Find files by name
findname() {
    find . -type f -name "*$1*" 2>/dev/null
}

# Find files by content
findcontent() {
    grep -r "$1" . 2>/dev/null
}

# Quick backup
backup() {
    cp "$1" "$1.backup-$(date +%Y%m%d_%H%M%S)"
}

# Environment variables
export EDITOR=nano
export VISUAL=nano
export BROWSER=firefox
export TERMINAL=konsole
export PAGER=less

# Add local bin to PATH
export PATH="$HOME/.local/bin:$PATH"
export PATH="$HOME/bin:$PATH"

# Add project-heimdal bin to PATH if it exists
if [ -d "/run/media/$USER/Data/project-heimdal/bin" ]; then
    export PATH="/run/media/$USER/Data/project-heimdal/bin:$PATH"
fi

# Tailscale environment
export TAILSCALE_HOSTNAME=$(hostname)

# Load bash completion
if [ -f /usr/share/bash-completion/bash_completion ]; then
    . /usr/share/bash-completion/bash_completion
fi

# Load local bashrc if it exists
if [ -f ~/.bashrc.local ]; then
    . ~/.bashrc.local
fi
